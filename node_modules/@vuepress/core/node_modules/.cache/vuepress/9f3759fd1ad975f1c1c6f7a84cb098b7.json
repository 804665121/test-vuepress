{"remainingRequest":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/docs/learn/README.md?vue&type=template&id=3bc90bc3&","dependencies":[{"path":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/docs/learn/README.md","mtime":1663514329566},{"path":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1663163349046},{"path":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1663163349046},{"path":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/babel-loader/lib/index.js","mtime":1663163349018},{"path":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1663163349251},{"path":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1663163349046},{"path":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":1663163349251},{"path":"/Users/liulu/刘璐/vue3/hello-vue3/vuepress-starter/node_modules/@vuepress/markdown-loader/index.js","mtime":1663163348709}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}